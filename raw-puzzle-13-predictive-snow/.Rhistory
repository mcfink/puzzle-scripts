x <- read_fwf(con)
x <- read_fwf(con, skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ", skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
## functions
)
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
close()
close(con)
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
library(readr)
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
x <- read_fwf(con, skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
con
x
htmlCode <- readLines(con)
con = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ")
htmlCode <- readLines(con)
head(htmlCode)
write.table(htmlCode, file = "texty.txt")
x <- read_fwf("texty.txt"), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
x <- read_fwf("texty.txt", skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
head(x)
sum(x$X4)
summary(x$X4)
sum(as.numeric(x$X4))
x <- read_fwf("texty.txt", skip=4, fwf_widths(c(13, 7,4,9,4,9,4,9,4)))
sum(as.numeric(x$X4))
head(x)
summary(x)
summary(as.numeric(x$X4))
x$X4
x <- read_fwf("texty.txt", skip=4, widths = c(12, 7,4,9,4,9,4,9,4))
x <- read.fwf("texty.txt", skip=4, widths = c(12, 7,4,9,4,9,4,9,4))
head(x)
head(x, 50)
x <- read.fwf("texty.txt", skip=4, widths = c(16, 7,4,9,4,9,4,9,4))
head(x, 50)
x <- read.fwf("texty.txt", skip=4, widths = c(16, 9,4,9,4,9,4,9,4))
head(x, 50)
colSums(as.numeric(x$V4))
sum(as.numeric(x$V4))
length(x)
length(x$V1)
1255* 25
x <- read.fwf("texty.txt", skip=12, widths = c(16, 9,4,9,4,9,4,9,4))
sum(as.numeric(x$V4))
head(x, 20)
tail(x, 20)
install.packages('maps')
library(maps)
map('state.carto', fill = TRUE, col = palette())
data(stateMapEnv)
data(state.vbm.center)
map('usa')
install.packages(gpclib)
install.packages('gpclib')
install.packages('maptools')
library(RColorBrewer)
library(classInt)
install.packages('classInt')
library(gpclib)
library(maptools)
gpclibPermit()
library(classInt)
a <-download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv )
a <-download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv" )
a <-download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", a.csv )
?download.file
getwd()
a <- read.csv("getdata-data-ss06hid.csv")
head(a)
library(dplyr)
vec <- ifelse(a$ACR ==4, ifelse(a$AGS == 6, TRUE, FALSE), FALSE)
head(vec)
b <- a[vec]
b <-tbl_df(a)
c <- filter(b, ACR == 3)
d <- filter(c, AGS == 6)
head(d)
vec <- ifelse(a$ACR ==4, ifelse(a$AGS == 6, TRUE, FALSE), FALSE)
a[which(vec)]
which(vec)
head(vec)
head(vec, 19)
head(vec, 300)
which(vec)
vec <- ifelse(a$ACR ==3, ifelse(a$AGS == 6, TRUE, FALSE), FALSE)
which(vec)
library(jpeg)
install.packages("jpeg")
library(jpeg)
readJPEG("test.jpg")
readJPEG("test.jpg", native=TRUE)
a <-readJPEG("test.jpg", native=TRUE)
quantile(a, c(.3, .8))
a <- read.csv('edstats.csv')
b <- read.csv('GDP.csv')
?merge
?join
head(b)
head(b$X.1)
head(b$X.1, 30)
head(b$X, 30)
head(a$X, 30)
head(a, 30)
c <- merge(a, b, by.x="X", by.y = "CountryCode")
c <- merge(a, b, by.x=X, by.y = "CountryCode")
c <- merge(a, b, by.x=a$X, by.y = "CountryCode")
c <- merge(a, b, by.y = "CountryCode")
c <- merge(a, b, by.y = b$X)
?merge
c <- merge(a,b)
head(c, 30)
head(c, 3)
head(a$Short.Name)
head(a$CountryCode)
head(b$X)
merge(a, b, by.a = "CountryCode", by.b = "X")
c <- merge(a, b, by.a = "CountryCode", by.b = "X")
head(c,2)
d <- sort(c$Gross.domestic.product.2012)
head(d$Gross.domestic.product.2012)
head(d, 15)
head(c,5)
length(d)
length(a)
length(b)
length(a$CountryCode)
length(b$X)
c <- merge(a, b, by.x = "CountryCode", by.y = "X")
d <- sort(c$Gross.domestic.product.2012)
head(d, 15)
head(d$GDP)
combined <- merge(a,b, by.x = "CountryCode", by.y = "X")
head(combined)
combined$GDP <- as.numeric(as.character(combined$Gross.domestic.product.2012))
combined$Short.Name <- as.character(combined$Short.Name)
head(combined, 13)
head(combined[order(combined$GDP, decreasing = TRUE)])
head(combined[order(combined$GDP, decreasing = TRUE),])
head(combined[order(combined$GDP, decreasing = TRUE),], 13)
?cut
f <- tapply(combined$GDP, combined$Income.Group, na.rm = TRUE, man)
f <- tapply(combined$GDP, combined$Income.Group, na.rm = TRUE, mean)
f
g <- cut(combined, breaks=5)
g <- cut(combined$GDP, breaks=5)
?table
table(g$GDP, g$Income.Group)
g <- data.frame(combined$Short.Name, combined$GDP, combined$Income.Group)
head(g)
g$quant <- cut(g$combined.GDP, breaks=5)
table(g$quant, g$combined.GDP)
table(g$quant, g$combined.Income.Group)
a <- read.csv("640048.csv")
a <- tbl_df(a)
c <- mutate(a, my = as.character(DATE))
d <- mutate(c, year = as.numeric(substr(my, 1,4)), month = as.numeric(substr(my, 5,6)))
q <- mutate(d, station = as.character(STATION_NAME))
snow <- filter(q, TSNW > -1)
grouped_snow  <- group_by(snow, year, station)
early_snow  <- filter(grouped_snow, month > 9)
sum_early_snow  <- summarize(early_snow, sum(TSNW))
late_snow <- filter(grouped_snow, month < 6)
sum_late_snow <- summarize(late_snow, sum(TSNW))
sum_late_snow_corrected_year  <- mutate(sum_late_snow, corrected_year = year - 1)
names(sum_early_snow)[names(sum_early_snow)=="sum(TSNW)"] <- "earlysnow"
names(sum_late_snow_corrected_year)[names(sum_late_snow_corrected_year)=="sum(TSNW)"] <- "latesnow"
sum_late_snow_corrected_year <- sum_late_snow_corrected_year[,2:4]
library(dplyr)
library(lubridate)
a <- read.csv("640048.csv")
a <- tbl_df(a)
c <- mutate(a, my = as.character(DATE))
d <- mutate(c, year = as.numeric(substr(my, 1,4)), month = as.numeric(substr(my, 5,6)))
q <- mutate(d, station = as.character(STATION_NAME))
snow <- filter(q, TSNW > -1)
grouped_snow  <- group_by(snow, year, station)
early_snow  <- filter(grouped_snow, month > 9)
sum_early_snow  <- summarize(early_snow, sum(TSNW))
late_snow <- filter(grouped_snow, month < 6)
sum_late_snow <- summarize(late_snow, sum(TSNW))
sum_late_snow_corrected_year  <- mutate(sum_late_snow, corrected_year = year - 1)
names(sum_early_snow)[names(sum_early_snow)=="sum(TSNW)"] <- "earlysnow"
names(sum_late_snow_corrected_year)[names(sum_late_snow_corrected_year)=="sum(TSNW)"] <- "latesnow"
sum_late_snow_corrected_year <- sum_late_snow_corrected_year[,2:4]
setwd("~/Desktop/puzzles-starting-2015/raw-puzzle-13-predictive-snow")
a <- read.csv("640048.csv")
a <- tbl_df(a)
c <- mutate(a, my = as.character(DATE))
d <- mutate(c, year = as.numeric(substr(my, 1,4)), month = as.numeric(substr(my, 5,6)))
q <- mutate(d, station = as.character(STATION_NAME))
snow <- filter(q, TSNW > -1)
grouped_snow  <- group_by(snow, year, station)
early_snow  <- filter(grouped_snow, month > 9)
sum_early_snow  <- summarize(early_snow, sum(TSNW))
late_snow <- filter(grouped_snow, month < 6)
sum_late_snow <- summarize(late_snow, sum(TSNW))
sum_late_snow_corrected_year  <- mutate(sum_late_snow, corrected_year = year - 1)
names(sum_early_snow)[names(sum_early_snow)=="sum(TSNW)"] <- "earlysnow"
names(sum_late_snow_corrected_year)[names(sum_late_snow_corrected_year)=="sum(TSNW)"] <- "latesnow"
sum_late_snow_corrected_year <- sum_late_snow_corrected_year[,2:4]
sum_late_snow_corrected_year
sum_late_snow_corrected_year <- rename(sum_late_snow_corrected_year, year = corrected_year)
sum_late_snow_corrected_year
merged_snow  <- merge(sum_early_snow, sum_late_snow_corrected_year)
merged_snow
g  <- ggplot(merged_snow, aes(early_snow/10, late_snow/10))
library(ggplot2)
g  <- ggplot(merged_snow, aes(early_snow/10, late_snow/10))
g + geom_point(aes(color=STATION)) + coord_cartesian(ylim=c(0,800)) +  theme_bw(base_family = "Helvetica", base_size=16) +theme(legend.position="none") + ylab("Snow After Dec. 31") + xlab("Snow Before Jan. 1") + ggtitle("")
g + geom_point(aes(color=STATION)) + coord_cartesian(ylim=c(0,800)) +  theme_bw(base_family = "Helvetica", base_size=16) +theme() + ylab("Snow After Dec. 31") + xlab("Snow Before Jan. 1")
merged_snow
merged_snow  <- tbl_df(merged_snow)
merged_snow
g  <- ggplot(merged_snow, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=station)) + coord_cartesian(ylim=c(0,800)) +  theme_bw(base_family = "Helvetica", base_size=16) +theme() + ylab("Snow After Dec. 31") + xlab("Snow Before Jan. 1")
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
g + geom_point(aes(color=station), alpha=.4) + coord_cartesian(ylim=c(0,800)) +  theme_bw(base_family = "Helvetica", base_size=16) +theme() + ylab("Snow After Dec. 31") + xlab("Snow Before Jan. 1")
g + geom_point(aes(color=station), alpha=.4) + coord_cartesian(ylim=c(0,300)) +  theme_bw(base_family = "Helvetica", base_size=16) +theme() + ylab("Snow After Dec. 31") + xlab("Snow Before Jan. 1")
g + geom_point(aes(color=station), alpha=.8) + coord_cartesian(ylim=c(0,300)) +  theme_bw(base_family = "Helvetica", base_size=16) +theme() + ylab("Snow After Dec. 31") + xlab("Snow Before Jan. 1")
g + geom_point(aes(color=station), alpha=.8) + coord_cartesian(ylim=c(0,300)) + facet_wrap(~station, nrow=2) + theme_bw(base_family = "Helvetica", base_size=16) +theme() + ylab("Snow After Dec. 31") + xlab("Snow Before Jan. 1")
g + geom_point(aes(color=station), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,300)) + facet_wrap(~station, nrow=2) + theme_bw(base_family = "Helvetica", base_size=16) +theme() + ylab("Snow After Dec. 31") + xlab("Snow Before Jan. 1")
g + geom_point(aes(color=station), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,300)) + facet_wrap(~station, nrow=2) + theme_bw(base_family = "Helvetica", base_size=16) +theme() + ylab("Snow after Dec. 31") + xlab("Snow Until Dec. 31")
g + geom_point(aes(color=station), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,300)) + facet_wrap(~station, nrow=2) + theme_bw(base_family = "Helvetica", base_size=16) +theme() + ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)")
g + geom_point(aes(color=station), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,300)) + facet_wrap(~station, nrow=2) + theme_bw(base_family = "Helvetica", base_size=16) +theme() + ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150, 250))
levels(merged_snow$station)
merged_snow2  <- merged_snow
fix_station_names <- function(station){
if(station == "BOZEMAN MONTANA SU MT US") "Bozeman, MT"
}
merged_snow2$station  <- lapply(fix_station_names(merged_snow2$station))
?lapply
merged_snow2$station  <- sapply(fix_station_names(merged_snow2$station))
merged_snow2$station  <- lapply(merged_snow2$station, fix_station_names(merged_snow2$station))
merged_snow2
?ifelse
fix_station_names <- function(station){
ifelse(station == "BOZEMAN MONTANA SU MT US", "Bozeman, MT", station)
}
merged_snow2$station  <- lapply(merged_snow2$station, fix_station_names(merged_snow2$station))
merged_snow2$station  <- lapply(merged_snow2$station, fix_station_names)
merged_snow2
merged_snow2  <- merged_snow
merged_snow2
fix_station_names <- function(station){
ifelse(station == "BOZEMAN MONTANA SU MT US", "Bozeman, MT", "not bozeman")
}
merged_snow2$station  <- lapply(merged_snow2$station, fix_station_names)
merged_snow2
fix_station_names("BOZEMAN MONTANA SU MT US")
fix_station_names("mi")
merged_snow2$station  <- apply(merged_snow2$station, fix_station_names)
merged_snow2$station  <- sapply(merged_snow2$station, fix_station_names)
merged_snow2
test  <- merged_snow$station[1]
test
fix_station_names(test)
merged_snow2  <- merged_snow
?sapply
merged_snow2$station  <- lapply(merged_snow2$station, fix_station_names, merged_snow2$station)
merged_snow2$station  <- lapply(merged_snow2$station, fix_station_names, station = merged_snow2$station)
merged_snow2
merged_snow2  <- mutate(merged_snow2, sta_factor = as.factor(station))
merged_snow2
levels(merged_snow2$sta_factor)
levels(merged_snow2$sta_factor)[levels(merged_snow2$sta_factor)=="BOZEMAN MONTANA SU MT US"] <- "Bozeman, MT"
merged_snow2
tail(merged_snow2$sta_factor, 50)
levels(merged_snow2$sta_factor)
levels(merged_snow2$sta_factor)[levels(merged_snow2$sta_factor)=="BOZEMAN MONTANA SU MT US"] <- "Bozeman, MT"
levels(merged_snow2$sta_factor)[levels(merged_snow2$sta_factor)=="DALE ENTERPRISE VA US"] <- "Dale Enterprise, VA"
levels(merged_snow2$sta_factor)[levels(merged_snow2$sta_factor)=="SAINT JOHNSBURY VT US"] <- "St. Johnsbury, VT"
levels(merged_snow2$sta_factor)[levels(merged_snow2$sta_factor)=="WILLOW CITY ND US"] <- "Willow City, ND"
levels(merged_snow2$sta_factor)[levels(merged_snow2$sta_factor)=="GUNNISON 3 SW CO US"] <- "Gunnison, CO"
levels(merged_snow2$sta_factor)[levels(merged_snow2$sta_factor)=="BUFFALO NIAGARA INTERNATIONAL AIRPORT NY US"] <- "Niagara Falls, NY"
levels(merged_snow2$sta_factor)[levels(merged_snow2$sta_factor)=="NOME MUNICIPAL AIRPORT AK US"] <- "Nome, AK"
levels(merged_snow2$sta_factor)[levels(merged_snow2$sta_factor)=="EDMONTON CITY CENTRE A CA"] <- "Edmonton, AB"
merged_snow2
g  <- ggplot(merged_snow2, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=sta_factor), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,300)) + facet_wrap(~station, nrow=2) + theme_bw(base_family = "Helvetica", base_size=16) +theme() + ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150, 250))
g  <- ggplot(merged_snow2, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=sta_factor), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,300)) + facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=16) +theme() + ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150, 250))
g  <- ggplot(merged_snow2, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=sta_factor), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) + facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=16) +theme() + ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150))
g  <- ggplot(merged_snow2, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=sta_factor), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) + facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=16) +theme(legend_position="none") + ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150))
g  <- ggplot(merged_snow2, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=sta_factor), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) + facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=16) +theme(legend.position="none") + ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150))
g  <- ggplot(merged_snow2, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=sta_factor), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) + facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=26) +theme(legend.position="none") + ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150))
g  <- ggplot(merged_snow2, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=sta_factor), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) + facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=26) +theme(legend.position="none") + ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) + stat_smooth(method=lm, se=FALSE, color="black")
?lm
lm_eqn = function(df){
m = lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
library(plyr)
library(dplyr)
eq <-  ddply(merged_snow2,.(sta_factor),lm_eqn)
eq
?ddply
merged_snow2
eq <-  ddply(merged_snow2[,3:4],.(sta_factor),lm_eqn)
eq <-  ddply(merged_snow2[,3:5],.(sta_factor),lm_eqn)
eq
?select
merged_snow3 <- select(merged_snow2, sta_factor, early_snow, late_snow)
merged_snow3 <- select(merged_snow2, sta_factor, earlysnow, latesnow)
eq <-  ddply(merged_snow3,.(sta_factor),lm_eqn)
eq
lm_eqn = function(df){
m = lm(latesnow ~ earlysnow, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
eq <-  ddply(merged_snow3,.(sta_factor),lm_eqn)
eq
lm_eqn = function(df){
m = lm(latesnow ~ earlysnow, df);
eq <- substitute(~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
eq <-  ddply(merged_snow3,.(sta_factor),lm_eqn)
g + geom_point(aes(color=sta_factor), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=26) +theme(legend.position="none") +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 25, y = 300, label = V1), parse = TRUE, inherit.aes = FALSE)
g + geom_point(aes(color=sta_factor), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=26) +theme(legend.position="none") +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 50, y = 200, label = V1), parse = TRUE, inherit.aes = FALSE)
g + geom_point(aes(color=sta_factor), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=26) +theme(legend.position="none") +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 50, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE)
g + geom_point(aes(color=sta_factor), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=26) +theme(legend.position="none") +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 50, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=24)
g + geom_point(aes(color=sta_factor), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=26) +theme(legend.position="none") +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 50, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
g + geom_point(aes(color=sta_factor), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=26) +theme(legend.position="none") +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 50, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=6)
g + geom_point(aes(color=sta_factor), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=26) +theme(legend.position="none") +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 50, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=8)
g + geom_point(aes(color=sta_factor), alpha=.8) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=26) +theme(legend.position="none") +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=8)
g + geom_point(aes(color=sta_factor), alpha=.8, size=2) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=26) +theme(legend.position="none") +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=8)
g + geom_point(aes(color=sta_factor), alpha=.8, size=3) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=26) +theme(legend.position="none") +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=8)
g + geom_point(aes(color=sta_factor), alpha=.7, size=3) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=26) +theme(legend.position="none") +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=8)
png("snow-puzzle-r-graphic.png", height = 1600, width=2400)
g  <- ggplot(merged_snow2, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=sta_factor), alpha=.7, size=3) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=26) +theme(legend.position="none") +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=8)
dev.off()
png("snow-puzzle-r-graphic.png", height = 1600, width=2400)
g  <- ggplot(merged_snow2, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=sta_factor), alpha=.7, size=3) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=32) +theme(legend.position="none") +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=8)
dev.off()
png("snow-puzzle-r-graphic.png", height = 1600, width=2400)
g  <- ggplot(merged_snow2, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=sta_factor), alpha=.7, size=3) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none") +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
dev.off()
png("snow-puzzle-r-graphic.png", height = 1600, width=2400)
g  <- ggplot(merged_snow2, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=sta_factor), alpha=.7, size=6) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none") +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
dev.off()
g + geom_point(aes(color=sta_factor), alpha=.7, size=6) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none", plot.margin = unit(c(1,1,1,1), "cm")) +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
library(grid)
g + geom_point(aes(color=sta_factor), alpha=.7, size=6) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none", plot.margin = unit(c(1,1,1,1), "cm")) +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
g + geom_point(aes(color=sta_factor), alpha=.7, size=6) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none", axis.title.y=element_text(vjust=0.1)) +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
g + geom_point(aes(color=sta_factor), alpha=.7, size=6) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none", axis.title.y=element_text(vjust=0.3), axis.title.x=element_text(hjust=0.3)) +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
g + geom_point(aes(color=sta_factor), alpha=.7, size=6) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none", axis.title.y=element_text(hjust=0.3), axis.title.x=element_text(vjust=0.3)) +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
g + geom_point(aes(color=sta_factor), alpha=.7, size=6) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none", axis.title.y=element_text(vjust=1), axis.title.x=element_text(vjust=1)) +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
g + geom_point(aes(color=sta_factor), alpha=.7, size=6) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none", axis.title.y=element_text(vjust=3), axis.title.x=element_text(vjust=-3)) +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
g + geom_point(aes(color=sta_factor), alpha=.7, size=6) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none", plot.margin = c(3,3,3,3), axis.title.y=element_text(vjust=3), axis.title.x=element_text(vjust=-3)) +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
dev.off()
g + geom_point(aes(color=sta_factor), alpha=.7, size=6) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none", plot.margin = c(3,3,3,3), axis.title.y=element_text(vjust=3), axis.title.x=element_text(vjust=-3)) +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
g + geom_point(aes(color=sta_factor), alpha=.7, size=6) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none", plot.margin = unit(c(3,3,3,3), "cm"), axis.title.y=element_text(vjust=3), axis.title.x=element_text(vjust=-3)) +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
png("snow-puzzle-r-graphic.png", height = 1600, width=2400)
g  <- ggplot(merged_snow2, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=sta_factor), alpha=.7, size=6) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none", plot.margin = unit(c(1,1,1,1), "cm"), axis.title.y=element_text(vjust=3), axis.title.x=element_text(vjust=-3)) +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
dev.off()
png("snow-puzzle-r-graphic.png", height = 1600, width=2400)
g  <- ggplot(merged_snow2, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=sta_factor), alpha=.7, size=6) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none", plot.margin = unit(c(2,2,2,2), "cm"), axis.title.y=element_text(vjust=3), axis.title.x=element_text(vjust=-3)) +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
dev.off()
png("snow-puzzle-r-graphic.png", height = 1600, width=2400)
g  <- ggplot(merged_snow2, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=sta_factor), alpha=.7, size=6) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none", plot.margin = unit(c(0.5,0.5,2,1), "cm"), axis.title.y=element_text(vjust=3), axis.title.x=element_text(vjust=-3)) +
ylab("Snow after Dec. 31 (in.)") + xlab("Snow Until Dec. 31 (in.)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
dev.off()
png("snow-puzzle-r-graphic.png", height = 1600, width=2400)
g  <- ggplot(merged_snow2, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=sta_factor), alpha=.7, size=6) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none", plot.margin = unit(c(0.5,0.5,2,1), "cm"), axis.title.y=element_text(vjust=3), axis.title.x=element_text(vjust=-3)) +
ylab("Snow after Dec. 31 (inches)") + xlab("Snow Until Dec. 31 (inches)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
dev.off()
png("snow-puzzle-r-graphic.png", height = 1600, width=2400)
g  <- ggplot(merged_snow2, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=sta_factor), alpha=.7, size=6) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none", plot.margin = unit(c(0.5,0.5,2,1), "cm"), axis.title.y=element_text(vjust=3), axis.title.x=element_text(vjust=-3)) +
ylab("Snow After Dec. 31 (inches)") + xlab("Snow Before Dec. 31 (inches)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
dev.off()
