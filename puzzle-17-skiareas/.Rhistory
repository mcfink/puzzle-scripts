}
sv <- makeCacheMatrix(matrix(1,0,1,0,0,1,2,3,1),3,3)
sv <- makeCacheMatrix(matrix(c(1,0,1,0,0,1,2,3,1),3,3))
sv
sv_$get
sv$get()
sv$getinverse()
cacheSolve(sv)
sv$getinverse()
sv$set(matrix(c(1:4), 2,2))
sv$getinverse()
sv$get()
cacheSolve(sv)
sv$getinverse()
cacheSolve(sv)
set.seed(1)
rpois(5,2)
?qpois
?rep
rep(0:1, 5)
rep(0:1, each=5)
x <- rep(0:1, each=5)
y <- rnorm(10,0,20)
z <-0.5+ 2* x + y
z
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", key = 86b365a37fec3bfca8d7, secret = 3dd6bfa7c49ea1148cb6a351922ebf9e92c799e5)
myapp <- oauth_app("github", key = "86b365a37fec3bfca8d7", secret = "3dd6bfa7c49ea1148cb6a351922ebf9e92c799e5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
test <- url("https://api.github.com/users/jtleek/repos")
test
test.description
test$description
install.packages(RMySQL)
install.packages("RMySQL")
library(RMySQL)
acs <- dbConnect(MySQL(), host = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
setwd("~/Desktop/jh-data-courses")
acs <- read.csv("getdata%2Fdata%2Fss06pid.csv")
acs <- read.csv("getdata-2Fdata-2Fss06pid.csv")
acs <- read.csv("getdata-data-ss06pid.csv")
dbDisconnect(acs)
dbListConnections()
dbListConnections(MySQL())
dbDisconnect(list)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
library(XML)
htmlCode = readlines(con)
htmlCode = readLines(con = )
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
close(con)
htmlCode
htmlCode[1]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[40])
nchar(htmlCode[50])
nchar(htmlCode[100])
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ")
htmlCode <- readLines(con)
close(con)
htmlCode
library(readr)
install.packages(readr)
install.packages("readr")
library(readr)
x <- read_fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
fwf_widths(c(12, 7,4, 9,4, 9,4, 9,4))))
x <- read_fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
fwf_widths(c(12, 7,4, 9,4, 9,4, 9,4)))
htmlCode
x <- read_fwf(https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for)
x <- read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
x <- read_fwf(con)
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ")
x <- read_fwf(con)
x <- read_fwf(con, skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ", skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
## functions
)
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
close()
close(con)
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
library(readr)
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
x <- read_fwf(con, skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
con
x
htmlCode <- readLines(con)
con = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ")
htmlCode <- readLines(con)
head(htmlCode)
write.table(htmlCode, file = "texty.txt")
x <- read_fwf("texty.txt"), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
x <- read_fwf("texty.txt", skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
head(x)
sum(x$X4)
summary(x$X4)
sum(as.numeric(x$X4))
x <- read_fwf("texty.txt", skip=4, fwf_widths(c(13, 7,4,9,4,9,4,9,4)))
sum(as.numeric(x$X4))
head(x)
summary(x)
summary(as.numeric(x$X4))
x$X4
x <- read_fwf("texty.txt", skip=4, widths = c(12, 7,4,9,4,9,4,9,4))
x <- read.fwf("texty.txt", skip=4, widths = c(12, 7,4,9,4,9,4,9,4))
head(x)
head(x, 50)
x <- read.fwf("texty.txt", skip=4, widths = c(16, 7,4,9,4,9,4,9,4))
head(x, 50)
x <- read.fwf("texty.txt", skip=4, widths = c(16, 9,4,9,4,9,4,9,4))
head(x, 50)
colSums(as.numeric(x$V4))
sum(as.numeric(x$V4))
length(x)
length(x$V1)
1255* 25
x <- read.fwf("texty.txt", skip=12, widths = c(16, 9,4,9,4,9,4,9,4))
sum(as.numeric(x$V4))
head(x, 20)
tail(x, 20)
install.packages('maps')
library(maps)
map('state.carto', fill = TRUE, col = palette())
data(stateMapEnv)
data(state.vbm.center)
map('usa')
install.packages(gpclib)
install.packages('gpclib')
install.packages('maptools')
library(RColorBrewer)
library(classInt)
install.packages('classInt')
library(gpclib)
library(maptools)
gpclibPermit()
library(classInt)
a <-download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv )
a <-download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv" )
a <-download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", a.csv )
?download.file
getwd()
a <- read.csv("getdata-data-ss06hid.csv")
head(a)
library(dplyr)
vec <- ifelse(a$ACR ==4, ifelse(a$AGS == 6, TRUE, FALSE), FALSE)
head(vec)
b <- a[vec]
b <-tbl_df(a)
c <- filter(b, ACR == 3)
d <- filter(c, AGS == 6)
head(d)
vec <- ifelse(a$ACR ==4, ifelse(a$AGS == 6, TRUE, FALSE), FALSE)
a[which(vec)]
which(vec)
head(vec)
head(vec, 19)
head(vec, 300)
which(vec)
vec <- ifelse(a$ACR ==3, ifelse(a$AGS == 6, TRUE, FALSE), FALSE)
which(vec)
library(jpeg)
install.packages("jpeg")
library(jpeg)
readJPEG("test.jpg")
readJPEG("test.jpg", native=TRUE)
a <-readJPEG("test.jpg", native=TRUE)
quantile(a, c(.3, .8))
a <- read.csv('edstats.csv')
b <- read.csv('GDP.csv')
?merge
?join
head(b)
head(b$X.1)
head(b$X.1, 30)
head(b$X, 30)
head(a$X, 30)
head(a, 30)
c <- merge(a, b, by.x="X", by.y = "CountryCode")
c <- merge(a, b, by.x=X, by.y = "CountryCode")
c <- merge(a, b, by.x=a$X, by.y = "CountryCode")
c <- merge(a, b, by.y = "CountryCode")
c <- merge(a, b, by.y = b$X)
?merge
c <- merge(a,b)
head(c, 30)
head(c, 3)
head(a$Short.Name)
head(a$CountryCode)
head(b$X)
merge(a, b, by.a = "CountryCode", by.b = "X")
c <- merge(a, b, by.a = "CountryCode", by.b = "X")
head(c,2)
d <- sort(c$Gross.domestic.product.2012)
head(d$Gross.domestic.product.2012)
head(d, 15)
head(c,5)
length(d)
length(a)
length(b)
length(a$CountryCode)
length(b$X)
c <- merge(a, b, by.x = "CountryCode", by.y = "X")
d <- sort(c$Gross.domestic.product.2012)
head(d, 15)
head(d$GDP)
combined <- merge(a,b, by.x = "CountryCode", by.y = "X")
head(combined)
combined$GDP <- as.numeric(as.character(combined$Gross.domestic.product.2012))
combined$Short.Name <- as.character(combined$Short.Name)
head(combined, 13)
head(combined[order(combined$GDP, decreasing = TRUE)])
head(combined[order(combined$GDP, decreasing = TRUE),])
head(combined[order(combined$GDP, decreasing = TRUE),], 13)
?cut
f <- tapply(combined$GDP, combined$Income.Group, na.rm = TRUE, man)
f <- tapply(combined$GDP, combined$Income.Group, na.rm = TRUE, mean)
f
g <- cut(combined, breaks=5)
g <- cut(combined$GDP, breaks=5)
?table
table(g$GDP, g$Income.Group)
g <- data.frame(combined$Short.Name, combined$GDP, combined$Income.Group)
head(g)
g$quant <- cut(g$combined.GDP, breaks=5)
table(g$quant, g$combined.GDP)
table(g$quant, g$combined.Income.Group)
?maps
library(maps)
library(maptools)
?maps
shiny::runApp('~/Desktop/first-shiny-app')
a  <- read.csv('tsort-chart-2-4-0003.csv')
b  <- tbl_df(a)
## change year column to number
c <- mutate(b, nyear = as.numeric(levels(year))[year])
eighties <- filter(c, nyear > 1979 & nyear <1990)
eightiesongs <- filter(eighties, as.character(type) == "song")
esbyartists <- group_by(eightiesongs, artist)
artistsums <- summarize(esbyartists, songs = length(score),total = sum(score), biggesthitscore = max(score), biggesthit = name[which.max(score)])
onehitwonderindex <- mutate(artistsums, bighitpct = biggesthitscore/total)
onehitwonderindex <- filter(onehitwonderindex, biggesthitscore > 1)
onehitwonderindex <- mutate(onehitwonderindex, ohwindex = bighitpct * biggesthitscore)
orderedohw <- arrange(onehitwonderindex, desc(ohwindex))
a  <- read.csv('tsort-chart-2-4-0003.csv')
b  <- tbl_df(a)
## change year column to number
c <- mutate(b, nyear = as.numeric(levels(year))[year])
eighties <- filter(c, nyear > 1979 & nyear <1990)
eightiesongs <- filter(eighties, as.character(type) == "song")
esbyartists <- group_by(eightiesongs, artist)
artistsums <- summarize(esbyartists, songs = length(score),total = sum(score), biggesthitscore = max(score), biggesthit = name[which.max(score)])
onehitwonderindex <- mutate(artistsums, bighitpct = biggesthitscore/total)
onehitwonderindex <- filter(onehitwonderindex, biggesthitscore > 1)
onehitwonderindex <- mutate(onehitwonderindex, ohwindex = bighitpct * biggesthitscore)
orderedohw <- arrange(onehitwonderindex, desc(ohwindex))
library(dplyr)
a  <- read.csv('tsort-chart-2-4-0003.csv')
b  <- tbl_df(a)
## change year column to number
c <- mutate(b, nyear = as.numeric(levels(year))[year])
eighties <- filter(c, nyear > 1979 & nyear <1990)
eightiesongs <- filter(eighties, as.character(type) == "song")
esbyartists <- group_by(eightiesongs, artist)
artistsums <- summarize(esbyartists, songs = length(score),total = sum(score), biggesthitscore = max(score), biggesthit = name[which.max(score)])
onehitwonderindex <- mutate(artistsums, bighitpct = biggesthitscore/total)
onehitwonderindex <- filter(onehitwonderindex, biggesthitscore > 1)
onehitwonderindex <- mutate(onehitwonderindex, ohwindex = bighitpct * biggesthitscore)
orderedohw <- arrange(onehitwonderindex, desc(ohwindex))
library(lubridate)
a  <- read.csv('tsort-chart-2-4-0003.csv')
b  <- tbl_df(a)
## change year column to number
c <- mutate(b, nyear = as.numeric(levels(year))[year])
eighties <- filter(c, nyear > 1979 & nyear <1990)
eightiesongs <- filter(eighties, as.character(type) == "song")
esbyartists <- group_by(eightiesongs, artist)
artistsums <- summarize(esbyartists, songs = length(score),total = sum(score), biggesthitscore = max(score), biggesthit = name[which.max(score)])
onehitwonderindex <- mutate(artistsums, bighitpct = biggesthitscore/total)
onehitwonderindex <- filter(onehitwonderindex, biggesthitscore > 1)
onehitwonderindex <- mutate(onehitwonderindex, ohwindex = bighitpct * biggesthitscore)
orderedohw <- arrange(onehitwonderindex, desc(ohwindex))
setwd("~/Desktop/first-shiny-app")
a  <- read.csv('tsort-chart-2-4-0003.csv')
b  <- tbl_df(a)
## change year column to number
c <- mutate(b, nyear = as.numeric(levels(year))[year])
eighties <- filter(c, nyear > 1979 & nyear <1990)
eightiesongs <- filter(eighties, as.character(type) == "song")
esbyartists <- group_by(eightiesongs, artist)
artistsums <- summarize(esbyartists, songs = length(score),total = sum(score), biggesthitscore = max(score), biggesthit = name[which.max(score)])
onehitwonderindex <- mutate(artistsums, bighitpct = biggesthitscore/total)
onehitwonderindex <- filter(onehitwonderindex, biggesthitscore > 1)
onehitwonderindex <- mutate(onehitwonderindex, ohwindex = bighitpct * biggesthitscore)
orderedohw <- arrange(onehitwonderindex, desc(ohwindex))
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='mcfink', token='9F8F04C5DF879E9980DC81FE68E76954', secret='mwFA7oSEN/Bohs5V7S/+2j7HS140oMXGBMkw3jBT')
library(shinyapps)
setwd("~/Desktop/first-shiny-app")
shinyapps::deployApp(appDir="~/Desktop/first-shiny-app")
devtools::install_github('rstudio/packrat')
shinyapps::deployApp(appDir="~/Desktop/first-shiny-app")
shinyapps::deployApp(appDir="~/Desktop/first-shiny-app")
shiny::runApp()
shiny::runApp()
shinyapps::deployApp(appDir="~/Desktop/first-shiny-app")
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
author("first_deck")
setwd("~/Desktop/slidify")
library(slidify)
author("first_deck")
publish(user = "mcfink", repo = "https://github.com/mcfink/one-hit-wonders-slidify.git")
publish(user = "mcfink", repo = "one-hit-wonders-slidify")
publish(user = "mcfink", repo = "one-hit-wonders-slidify")
publish(user = "mcfink", repo = "one-hit-wonders-slidify")
library(choroplethr)
library(choroplethrMaps)
library(dplyr)
library(ggplot2)
library(mapproj)
library(gridExtra)
ski_states <- state.regions
ski_states$value <- c(9,1,0,4,29,30,5,0,0,0,0,0,4,17,6,2,0,0,0,13,1,18,44,18,2,0,15,6,3,0,26,2,8,4,51,6,0,11,27,1,0,3,1,0,14,5,24,14,31,5,10)
ski_sans_abbs <- c("region", "value")
ski_final <- ski_states[ski_sans_abbs]
choro = StateChoropleth$new(ski_final)
choro$set_num_colors(1)
choro$show_labels = FALSE
choro$theme_clean()
choro$render()
otherchoro = state_choropleth(ski_final)
install.packages('choroplethr')
install.packages('choroplethr')
install.packages("choroplethr")
install.packages('choroplethrMaps')
library(choroplethr)
library(choroplethrMaps)
library(dplyr)
library(ggplot2)
library(mapproj)
ski_states <- state.regions
ski_states$value <- c(9,1,0,4,29,30,5,0,0,0,0,0,4,17,6,2,0,0,0,13,1,18,44,18,2,0,15,6,3,0,26,2,8,4,51,6,0,11,27,1,0,3,1,0,14,5,24,14,31,5,10)
ski_sans_abbs <- c("region", "value")
ski_final <- ski_states[ski_sans_abbs]
choro = StateChoropleth$new(ski_final)
choro$set_num_colors(1)
choro$show_labels = FALSE
choro$theme_clean()
choro$render()
otherchoro = state_choropleth(ski_final)
ski_states <- data(state.regions)
data(state.regions)
ski_states <- state.regions
ski_states$value <- c(9,1,0,4,29,30,5,0,0,0,0,0,4,17,6,2,0,0,0,13,1,18,44,18,2,0,15,6,3,0,26,2,8,4,51,6,0,11,27,1,0,3,1,0,14,5,24,14,31,5,10)
ski_sans_abbs <- c("region", "value")
ski_final <- ski_states[ski_sans_abbs]
choro = StateChoropleth$new(ski_final)
choro$set_num_colors(1)
choro$show_labels = FALSE
choro$theme_clean()
choro$render()
ski_states$value <- c(rep(0,51))
ski_sans_abbs <- c("region", "value")
ski_final <- ski_states[ski_sans_abbs]
choro = StateChoropleth$new(ski_final)
choro$set_num_colors(1)
choro$show_labels = FALSE
choro$theme_clean()
choro$render()
ski_states$value <- c(9,1,0,4,29,30,5,0,0,0,0,0,4,17,6,2,0,0,0,13,1,18,44,18,2,0,15,6,3,0,26,2,8,4,51,6,0,11,27,1,0,3,1,0,14,5,24,14,31,5,10)
choro2 <- StateChoropleth$new(ski_final)
choro2$title = "Ski Areas in Operation 2014-2015"
choro$show_labels = FALSE
choro$legend = "Number of Ski Areas"
choro$render() + coord_map("albers")
choro2 <- StateChoropleth$new(ski_final)
choro2$title = "Ski Areas in Operation 2014-2015"
choro$show_labels = FALSE
choro$legend = "Number of Ski Areas"
choro$render() + coord_map("albers", lat0=29.5, lat1=45.5)
choro2 <- StateChoropleth$new(ski_final)
choro$show_labels = FALSE
choro$render() + coord_map("albers", lat0=29.5, lat1=45.5)
library(mapproj)
choro2 <- StateChoropleth$new(ski_final)
choro$show_labels = FALSE
choro$render() + coord_map("albers", lat0=29.5, lat1=45.5)
state_choropleth(ski_final, zoom=continental) + coord_map("albers", lat0=29.5, lat1=45.5)
state_choropleth(ski_final, zoom="continental") + coord_map("albers", lat0=29.5, lat1=45.5)
state_choropleth(ski_final, zoom=continental_us_states) + coord_map("albers", lat0=29.5, lat1=45.5)
state_choropleth(ski_final, zoom=continental_us_states + coord_map("albers", lat0=29.5, lat1=45.5)
)
state_choropleth(ski_final, zoom=continental_us_states) + coord_map("albers", lat0=29.5, lat1=45.5)
state_choropleth(ski_final) + coord_map("albers", lat0=29.5, lat1=45.5)
state_choropleth(ski_final)
state_choropleth(ski_final,
num_colors = 1)
library(choroplethr)
library(choroplethrMaps)
library(dplyr)
library(ggplot2)
library(mapproj)
data(state.regions)
ski_states <- state.regions
ski_states$value <- c(9,1,0,4,29,30,5,0,0,0,0,0,4,17,6,2,0,0,0,13,1,18,44,18,2,0,15,6,3,0,26,2,8,4,51,6,0,11,27,1,0,3,1,0,14,5,24,14,31,5,10)
#ski_states$value <- c(rep(0,51))
ski_sans_abbs <- c("region", "value")
ski_final <- ski_states[ski_sans_abbs]
state_choropleth(ski_final,
num_colors = 1)
state_choropleth(ski_final,
num_colors = 1,
show_labels = FALSE)
choro = StateChoropleth$new(ski_final)
choro$set_num_colors(1)
choro$show_labels = FALSE
choro$theme_clean()
choro$render()
choro = StateChoropleth$new(ski_final)
choro$set_num_colors(1)
choro$show_labels = FALSE
choro$theme_clean()
choro$projection = "albers"
choro$render()
state_choropleth(ski_final,
num_colors = 1, zoom = continental)
state_choropleth(ski_final,
num_colors = 1, zoom = continentalUS)
state_choropleth(ski_final,
num_colors = 1, state_zoom = continentalUS)
state_choropleth(ski_final,
num_colors = 1, zoom = continentalUS)
state_choropleth(ski_final,
num_colors = 1, zoom = continental_us)
continental_us = state.regions$region[!state.regions$region %in% c("alaska", "hawaii")]
state_choropleth(ski_final,
num_colors = 1, zoom = continental_us)
?state_choropleth
choro2 <- StateChoropleth$new(ski_final)
choro2$show_labels = FALSE
choro2$render() + coord_map("albers", lat0=29.5, lat1=45.5)
choro2 <- StateChoropleth$new(ski_final)
choro2$show_labels = FALSE
choro2$render()
choro2 <- StateChoropleth$new(ski_final)
choro2$show_labels = FALSE
choro2$set_zoom(c("connecticut", "rhode island"))
choro2$render()
choro2 <- StateChoropleth$new(ski_final)
choro2$show_labels = FALSE
choro2$set_zoom(c("connecticut", "rhode island", "massachusetts", "maine", "new hampshire", "vermont"))
choro2$render()
choro2 <- StateChoropleth$new(ski_final)
choro2$show_labels = FALSE
choro2$set_zoom(c("connecticut", "rhode island", "massachusetts", "maine", "new hampshire", "vermont"))
choro2$set_num_colors(1)
choro2$render()
choro2 <- StateChoropleth$new(ski_final)
choro2$show_labels = FALSE
choro2$set_zoom(c("new york","connecticut", "rhode island", "massachusetts", "maine", "new hampshire", "vermont"))
choro2$set_num_colors(1)
choro2$render()
choro2 <- StateChoropleth$new(ski_final)
choro2$show_labels = FALSE
choro2$set_zoom(c("pennsylvania","new york","connecticut", "rhode island", "massachusetts", "maine", "new hampshire", "vermont"))
choro2$set_num_colors(1)
choro2$render()
choro2 <- StateChoropleth$new(ski_final)
choro2$show_labels = FALSE
choro2$set_zoom(c("new jersey","pennsylvania","new york","connecticut", "rhode island", "massachusetts", "maine", "new hampshire", "vermont"))
choro2$set_num_colors(1)
choro2$render()
setwd("~/Desktop/puzzles-starting-2015/puzzle-17-skiareas")
png("northeast-ski-areas.png", height = 1200, width = 1800)
choro2 <- StateChoropleth$new(ski_final)
choro2$show_labels = FALSE
choro2$set_zoom(c("new jersey","pennsylvania","new york","connecticut", "rhode island", "massachusetts", "maine", "new hampshire", "vermont"))
choro2$set_num_colors(1)
choro2$render()
dev.off()
ski_states
choro3 <- StateChoropleth$new(ski_final)
choro3$show_labels = FALSE
choro3$set_num_colors(1)
choro3$render()
png("all-ski-areas.png", height = 1200, width = 1800)
choro3 <- StateChoropleth$new(ski_final)
choro3$show_labels = FALSE
choro3$set_num_colors(1)
choro3$render()
dev.off()
