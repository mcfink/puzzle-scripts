m <- NULL
set <- function(y){
x <<- y
m <<- NULL
}
get <- function(){
x
}
setmean <- function(mean){
m <<- mean
}
getmean <- function(){
m
}
list(set = set, get = get, setmean = setmean, getmean = getmean)
}
cacheMean <- function(x, ...){
m <- x$getmean()
if(!is.null(m)){
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cacheMean(c(3,2,3,4,49,99))
sv <- c(3,19,91,93,94,90)
makeVector(sv)
cacheMean(sv)
makeVector(sv$set)
makeVector$set(sv)
sv$set
sv$getmean
makeVector(sv$set)
makeVector(sv)$set
makeVector()$get
cacheMean(sv)
cacheMean(makeVector, sv)
a <- makeVector
a$setmean(sv)
a$setmean
a$set(sv)
a <- makeVector()
a$set(sv)
a$get(sv)
a$get()
a$getmean()
a$setmean
a$setmean()
a$setmean(sv)
a$getmean()
cachemean(a, sv)
a$set(NULL)
a$setmean(NULL)
cacheMean(a, sv)
cacheMean(a, 3189,13,19,399)
a$set(NULL)
a$setmean(NULL)
cacheMean(a, 3189,13,19,399)
sv
a$setmean
a$setmean(NULL)
a$getmean
a$getmean()
a$get()
cacheMean(sv)
cacheMean(a, sv)
mean(sv)
cacheMean(a, sv)
a$set(NULL)
a$setmean(NULL)
cacheMean(a, sv)
mySpecialVector <- makeVector(sv)
cacheMean(mySpecialVector)
mySpecialVector$getmean
mySpecialVector$getmean()
mySpecialVector$get()
mySpecialVector$set(c(48,23,4989,22))
cacheMean(mySpecialVector)
makeCacheMatrix <- function(x = matrix()){
m <- NULL
set <- function(y){
x <<- y
m <<- NULL
}
get <- function(){
x
}
setinverse <- function(inverse){
m <<- inverse
}
getinverse <- function(){
m
}
list(set = set, get = get, setiinverse = setinverse, getinverse = getinverse)
}
cacheMean <- function(x, ...){
m <- x$getinverse()
if(!is.null(m)){
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
my_matrix <- makeCacheMatrix(matrix(1:4,2,2))
my_matrix$getinverse()
cacheSolve <- function(x, ...){
m <- x$getinverse()
if(!is.null(m)){
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
cacheSolve(my_matrix)
my_matrix$get()
cacheSolve(my_matrix)
makeCacheMatrix <- function(x = matrix()){
m <- NULL
set <- function(y){
x <<- y
m <<- NULL
}
get <- function(){
x
}
setinverse <- function(inverse){
m <<- inverse
}
getinverse <- function(){
m
}
list(set = set, get = get, setiinverse = setinverse, getinverse = getinverse)
}
cacheSolve <- function(x, ...){
matrix <- x$getinverse()
if(!is.null(matrix)){
message("getting cached data")
return(matrix)
}
data <- x$get()
matrix <- solve(data, ...)
x$setinverse(matrix)
matrix
}
my_matrix<-makeCacheMatrix(matrix(1:4, 2,2))
my_matrix$get()
my_matrix$getinverse()
cacheSolve(my_matrix)
solve(my_matrix)
solve(matrix(c(1,3,2,4)), 2,2)
solve(matrix(c(1,3,2,4), 2,2))
makeCacheMatrix <- function(x = matrix()){
m <- NULL
set <- function(y){
x <<- y
m <<- NULL
}
get <- function(){
x
}
setinverse <- function(inverse){
m <<- inverse
}
getinverse <- function(){
m
}
list(set = set, get = get, setinverse = setinverse, getinverse = getinverse)
}
cacheSolve <- function(x, ...){
matrix <- x$getinverse()
if(!is.null(matrix)){
message("getting cached data")
return(matrix)
}
data <- x$get()
matrix <- solve(data, ...)
x$setinverse(matrix)
matrix
}
cacheSolve(my_matrix)
my_matrix <- makeCacheMatrix(matrix(1:4,2,2))
cacheSolve(my_matrix)
cacheSolve(my_matrix)
my_matrix$get()
my_matrix$getinverse()
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y){
x <<- y
m <<- NULL
}
get <- function(){
x
}
setinverse <- function(inverse){
m <<- inverse
}
getinverse <- function(){
m
}
list(set = set, get = get, setinverse = setinverse, getinverse = getinverse)
}
## this function returns the inverse of the input matrix.
## if the inverse has already been computed, the cached inverse is returned
## otherwise, this function computes the input matrix's inverse.
cacheSolve <- function(x, ...) {
matrix <- x$getinverse()
if(!is.null(matrix)){
message("getting cached data")
return(matrix)
}
data <- x$get()
matrix <- solve(data, ...)
x$setinverse(matrix)
matrix
}
sv <- makeCacheMatrix(matrix(1,0,1,0,0,1,2,3,1),3,3)
sv <- makeCacheMatrix(matrix(c(1,0,1,0,0,1,2,3,1),3,3))
sv
sv_$get
sv$get()
sv$getinverse()
cacheSolve(sv)
sv$getinverse()
sv$set(matrix(c(1:4), 2,2))
sv$getinverse()
sv$get()
cacheSolve(sv)
sv$getinverse()
cacheSolve(sv)
set.seed(1)
rpois(5,2)
?qpois
?rep
rep(0:1, 5)
rep(0:1, each=5)
x <- rep(0:1, each=5)
y <- rnorm(10,0,20)
z <-0.5+ 2* x + y
z
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", key = 86b365a37fec3bfca8d7, secret = 3dd6bfa7c49ea1148cb6a351922ebf9e92c799e5)
myapp <- oauth_app("github", key = "86b365a37fec3bfca8d7", secret = "3dd6bfa7c49ea1148cb6a351922ebf9e92c799e5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
test <- url("https://api.github.com/users/jtleek/repos")
test
test.description
test$description
install.packages(RMySQL)
install.packages("RMySQL")
library(RMySQL)
acs <- dbConnect(MySQL(), host = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
setwd("~/Desktop/jh-data-courses")
acs <- read.csv("getdata%2Fdata%2Fss06pid.csv")
acs <- read.csv("getdata-2Fdata-2Fss06pid.csv")
acs <- read.csv("getdata-data-ss06pid.csv")
dbDisconnect(acs)
dbListConnections()
dbListConnections(MySQL())
dbDisconnect(list)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
library(XML)
htmlCode = readlines(con)
htmlCode = readLines(con = )
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
close(con)
htmlCode
htmlCode[1]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[40])
nchar(htmlCode[50])
nchar(htmlCode[100])
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ")
htmlCode <- readLines(con)
close(con)
htmlCode
library(readr)
install.packages(readr)
install.packages("readr")
library(readr)
x <- read_fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
fwf_widths(c(12, 7,4, 9,4, 9,4, 9,4))))
x <- read_fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
fwf_widths(c(12, 7,4, 9,4, 9,4, 9,4)))
htmlCode
x <- read_fwf(https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for)
x <- read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
x <- read_fwf(con)
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ")
x <- read_fwf(con)
x <- read_fwf(con, skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ", skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
## functions
)
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
close()
close(con)
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
library(readr)
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
x <- read_fwf(con, skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
con
x
htmlCode <- readLines(con)
con = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ")
htmlCode <- readLines(con)
head(htmlCode)
write.table(htmlCode, file = "texty.txt")
x <- read_fwf("texty.txt"), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
x <- read_fwf("texty.txt", skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
head(x)
sum(x$X4)
summary(x$X4)
sum(as.numeric(x$X4))
x <- read_fwf("texty.txt", skip=4, fwf_widths(c(13, 7,4,9,4,9,4,9,4)))
sum(as.numeric(x$X4))
head(x)
summary(x)
summary(as.numeric(x$X4))
x$X4
x <- read_fwf("texty.txt", skip=4, widths = c(12, 7,4,9,4,9,4,9,4))
x <- read.fwf("texty.txt", skip=4, widths = c(12, 7,4,9,4,9,4,9,4))
head(x)
head(x, 50)
x <- read.fwf("texty.txt", skip=4, widths = c(16, 7,4,9,4,9,4,9,4))
head(x, 50)
x <- read.fwf("texty.txt", skip=4, widths = c(16, 9,4,9,4,9,4,9,4))
head(x, 50)
colSums(as.numeric(x$V4))
sum(as.numeric(x$V4))
length(x)
length(x$V1)
1255* 25
x <- read.fwf("texty.txt", skip=12, widths = c(16, 9,4,9,4,9,4,9,4))
sum(as.numeric(x$V4))
head(x, 20)
tail(x, 20)
install.packages('maps')
library(maps)
map('state.carto', fill = TRUE, col = palette())
data(stateMapEnv)
data(state.vbm.center)
map('usa')
install.packages(gpclib)
install.packages('gpclib')
install.packages('maptools')
library(RColorBrewer)
library(classInt)
install.packages('classInt')
library(gpclib)
library(maptools)
gpclibPermit()
library(classInt)
library(plyr)
library(lubridate)
library(dplyr)
library(ggplot2)
setwd("~/Desktop/puzzles-starting-2015/puzzle-11-vt-weather")
a <- read.csv("weather_data.csv")
b <- tbl_df(a)
c <- mutate(b, my = as.character(DATE))
d <- mutate(c, year = as.numeric(substr(my, 1,4)), month = as.numeric(substr(my, 5,6)))
q <- mutate(d, station = as.character(STATION_NAME))
u <- filter(q, station != "GILMAN VT US")
v <- filter(u, station != "ROCHESTER VT US")
w <- filter(v, MNTM > -1000)
ylabel <- bquote('Mean Monthly Temperature ('^o*F*')')
n <- ggplot(w, aes(year, MNTM/10))
n + geom_point(aes(color=STATION_NAME)) + coord_cartesian(ylim=c(0,80)) + facet_grid(STATION_NAME~month) + stat_smooth(method=lm, se=FALSE, color="black")
lm_printer(w)
lm_printer = function(noaa_df){
lm_matrix <- matrix(nrow = 6, ncol=12)
pos_count <- 0
neg_count <- 0
index_a <- 1
for (g in levels(noaa_df$STATION_NAME)){
h <- filter(noaa_df, STATION_NAME == g)
index_b <- 1
for (y in c(1:12)){
print(g, y)
i <- filter(h, month == index_b)
q <- lm(MNTM ~ year, i)$coefficients[2]
lm_matrix[index_a, index_b] <- q
if (q<0){
neg_count <- neg_count + 1
} else {
pos_count <- pos_count + 1
}
index_b <- index_b + 1
print(q)
}
index_a <- index_a + 1
}
print(lm_matrix)
print(pos_count)
print(neg_count)
}
lm_printer(w)
w$STATION_NAME <- factor(w$STATION_NAME)
levels(w$STATION_NAME)
lm_printer(w)
n + geom_point(aes(color=STATION_NAME)) + coord_cartesian(ylim=c(0,80)) + facet_grid(STATION_NAME~month) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=19)
n + geom_point(aes(color=STATION_NAME)) + coord_cartesian(ylim=c(0,80)) + facet_grid(STATION_NAME~month) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16)
w <- mutate(w, month_name = month.name(month))
month.name(1)
1.month.name
month(1).name
month(1)
w <- mutate(w, month_name = month.abb)
w <- mutate(w, month_name = month.abb[month])
w$month_name
n + geom_point(aes(color=STATION_NAME)) + coord_cartesian(ylim=c(0,80)) + facet_grid(STATION_NAME~month_name + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16)
)
n + geom_point(aes(color=STATION_NAME)) + coord_cartesian(ylim=c(0,80)) + facet_grid(STATION_NAME~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16)
n + geom_point(aes(color=STATION_NAME)) + coord_cartesian(ylim=c(0,80)) + facet_grid(STATION_NAME~month) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16)
n <- ggplot(w, aes(year, MNTM/10))
n + geom_point(aes(color=STATION_NAME)) + coord_cartesian(ylim=c(0,80)) + facet_grid(STATION_NAME~month) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16)
n + geom_point(aes(color=STATION_NAME)) + coord_cartesian(ylim=c(0,80)) + facet_grid(STATION_NAME~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16)
w$month_name <- factor(w$month_name, levels= c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
n <- ggplot(w, aes(year, MNTM/10))
n + geom_point(aes(color=STATION_NAME)) + coord_cartesian(ylim=c(0,80)) + facet_grid(STATION_NAME~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16)
test_name <- "ENOSBURG FALLS VT US"
substrLeft <- function(x, n){
substr(x, 1, nchar(x)-n+1)
}
substrLeft(test_name, 7)
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1, 1)), substring(s, 2),
sep = "", collapse = " ")
}
simpleCap(substrLeft(test_name, 7))
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1, 1)), tolower(substring(s, 2)),
sep = "", collapse = " ")
}
simpleCap(substrLeft(test_name, 7))
w <- mutate(w, station_pname = simpleCap(substrLeft(test_name, 7)))
head(w$station_pname, 30)
tail(w$station_pname, 30)
w <- mutate(w, station_pname = simpleCap(substrLeft(STATION_NAME, 7)))
w <- mutate(w, station_pname = simpleCap(substrLeft(as.character(STATION_NAME), 7)))
tail(w$station_pname, 30)
head(w$station_pname, 30)
w <- mutate(w, station_pname = substrLeft(STATION_NAME, 7))
w <- mutate(w, station_pname = substrLeft(as.character(STATION_NAME), 7))
head(w$station_pname, 30)
tail(w$station_pname, 30)
w <- mutate(w, station_proper_name = simpleCap(station_pname))
tail(w$station_pname, 30)
tail(w$station_proper_name, 30)
w$station_pname <- sapply(w$station_pname, simpleCap)
tail(w$station_pname, 30)
n + geom_point(aes(color=STATION_NAME)) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16)
n <- ggplot(w, aes(year, MNTM/10))
n + geom_point(aes(color=STATION_NAME)) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16)
n + geom_point(aes(color=station_pname)) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16)
n + geom_point(aes(color=station_pname)) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16) +theme(legend.position="none")
n + geom_point(aes(color=station_pname)) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16) +theme(legend.position="none") + ylab("Mean Monthly Temperature")
n + geom_point(aes(color=station_pname)) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16) +theme(legend.position="none") + ylab(ylabel)
n + geom_point(aes(color=station_pname)) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16) +theme(legend.position="none") + ylab(ylabel) + xlab("Year") + ggtitle("Historical Temperature Trends in Vermont")
png("vt-temp-trends.png", width=1600, height=1200)
n + geom_point(aes(color=station_pname)) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16) +theme(legend.position="none") + ylab(ylabel) + xlab("Year") + ggtitle("Historical Temperature Trends in Vermont")
dev.off()
n + geom_point(aes(color=station_pname)) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16) +theme(legend.position="none", panel.margin=unit(2,"lines")) + ylab(ylabel) + xlab("Year") + ggtitle("Historical Temperature Trends in Vermont")
n + geom_point(aes(color=station_pname)) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16) +theme(legend.position="none", panel.margin=10) + ylab(ylabel) + xlab("Year") + ggtitle("Historical Temperature Trends in Vermont")
?unit
library(grid)
n + geom_point(aes(color=station_pname)) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16) +theme(legend.position="none", panel.margin=unit(2,"lines")) + ylab(ylabel) + xlab("Year") + ggtitle("Historical Temperature Trends in Vermont")
n + geom_point(aes(color=station_pname)) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16) +theme(legend.position="none", panel.margin=unit(0.2,"lines")) + ylab(ylabel) + xlab("Year") + ggtitle("Historical Temperature Trends in Vermont")
n + geom_point(aes(color=station_pname)) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16) +theme(legend.position="none", panel.margin=unit(0.5,"lines")) + ylab(ylabel) + xlab("Year") + ggtitle("Historical Temperature Trends in Vermont")
n + geom_point(aes(color=station_pname)) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16) +theme(legend.position="none") + ylab(ylabel) + xlab("Year") + ggtitle("Historical Temperature Trends in Vermont")+scale_y_continuous(breaks=c(10,30, 50, 70)
)
png("vt-temp-trends.png", width=1600, height=1200)
n + geom_point(aes(color=station_pname)) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16) +theme(legend.position="none") + ylab(ylabel) + xlab("Year") + ggtitle("Historical Temperature Trends in Vermont")+scale_y_continuous(breaks=c(10,30, 50, 70))
dev.off()
png("vt-temp-trends.png", width=2000, height=1200)
n + geom_point(aes(color=station_pname)) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=16) +theme(legend.position="none") + ylab(ylabel) + xlab("Year") + ggtitle("Historical Temperature Trends in Vermont")+scale_y_continuous(breaks=c(10,30, 50, 70))
dev.off()
lm_printer(w)
png("vt-temp-trends-lg-font.png", width=2000, height=1200)
n + geom_point(aes(color=station_pname)) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=19) +theme(legend.position="none") + ylab(ylabel) + xlab("Year") + ggtitle("Historical Temperature Trends in Vermont")+scale_y_continuous(breaks=c(10,30, 50, 70))
dev.off*
)
dev.off()
png("vt-temp-trends-lg-font-no-color.png", width=2000, height=1200)
n + geom_point(aes()) + coord_cartesian(ylim=c(0,80)) + facet_grid(station_pname~month_name) + stat_smooth(method=lm, se=FALSE, color="black")+ theme_bw(base_family = "Helvetica", base_size=19) +theme(legend.position="none") + ylab(ylabel) + xlab("Year") + ggtitle("Historical Temperature Trends in Vermont")+scale_y_continuous(breaks=c(10,30, 50, 70))
dev.off()
