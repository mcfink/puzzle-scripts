sv <- makeCacheMatrix(matrix(1,0,1,0,0,1,2,3,1),3,3)
sv <- makeCacheMatrix(matrix(c(1,0,1,0,0,1,2,3,1),3,3))
sv
sv_$get
sv$get()
sv$getinverse()
cacheSolve(sv)
sv$getinverse()
sv$set(matrix(c(1:4), 2,2))
sv$getinverse()
sv$get()
cacheSolve(sv)
sv$getinverse()
cacheSolve(sv)
set.seed(1)
rpois(5,2)
?qpois
?rep
rep(0:1, 5)
rep(0:1, each=5)
x <- rep(0:1, each=5)
y <- rnorm(10,0,20)
z <-0.5+ 2* x + y
z
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", key = 86b365a37fec3bfca8d7, secret = 3dd6bfa7c49ea1148cb6a351922ebf9e92c799e5)
myapp <- oauth_app("github", key = "86b365a37fec3bfca8d7", secret = "3dd6bfa7c49ea1148cb6a351922ebf9e92c799e5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
test <- url("https://api.github.com/users/jtleek/repos")
test
test.description
test$description
install.packages(RMySQL)
install.packages("RMySQL")
library(RMySQL)
acs <- dbConnect(MySQL(), host = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
setwd("~/Desktop/jh-data-courses")
acs <- read.csv("getdata%2Fdata%2Fss06pid.csv")
acs <- read.csv("getdata-2Fdata-2Fss06pid.csv")
acs <- read.csv("getdata-data-ss06pid.csv")
dbDisconnect(acs)
dbListConnections()
dbListConnections(MySQL())
dbDisconnect(list)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
library(XML)
htmlCode = readlines(con)
htmlCode = readLines(con = )
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
close(con)
htmlCode
htmlCode[1]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[40])
nchar(htmlCode[50])
nchar(htmlCode[100])
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ")
htmlCode <- readLines(con)
close(con)
htmlCode
library(readr)
install.packages(readr)
install.packages("readr")
library(readr)
x <- read_fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
fwf_widths(c(12, 7,4, 9,4, 9,4, 9,4))))
x <- read_fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
fwf_widths(c(12, 7,4, 9,4, 9,4, 9,4)))
htmlCode
x <- read_fwf(https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for)
x <- read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
x <- read_fwf(con)
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ")
x <- read_fwf(con)
x <- read_fwf(con, skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ", skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
## functions
)
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
close()
close(con)
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
library(readr)
x <- read_fwf( url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
x <- read_fwf(con, skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
con
x
htmlCode <- readLines(con)
con = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for ")
htmlCode <- readLines(con)
head(htmlCode)
write.table(htmlCode, file = "texty.txt")
x <- read_fwf("texty.txt"), skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
x <- read_fwf("texty.txt", skip=4, fwf_widths(c(12, 7,4,9,4,9,4,9,4)))
head(x)
sum(x$X4)
summary(x$X4)
sum(as.numeric(x$X4))
x <- read_fwf("texty.txt", skip=4, fwf_widths(c(13, 7,4,9,4,9,4,9,4)))
sum(as.numeric(x$X4))
head(x)
summary(x)
summary(as.numeric(x$X4))
x$X4
x <- read_fwf("texty.txt", skip=4, widths = c(12, 7,4,9,4,9,4,9,4))
x <- read.fwf("texty.txt", skip=4, widths = c(12, 7,4,9,4,9,4,9,4))
head(x)
head(x, 50)
x <- read.fwf("texty.txt", skip=4, widths = c(16, 7,4,9,4,9,4,9,4))
head(x, 50)
x <- read.fwf("texty.txt", skip=4, widths = c(16, 9,4,9,4,9,4,9,4))
head(x, 50)
colSums(as.numeric(x$V4))
sum(as.numeric(x$V4))
length(x)
length(x$V1)
1255* 25
x <- read.fwf("texty.txt", skip=12, widths = c(16, 9,4,9,4,9,4,9,4))
sum(as.numeric(x$V4))
head(x, 20)
tail(x, 20)
install.packages('maps')
library(maps)
map('state.carto', fill = TRUE, col = palette())
data(stateMapEnv)
data(state.vbm.center)
map('usa')
install.packages(gpclib)
install.packages('gpclib')
install.packages('maptools')
library(RColorBrewer)
library(classInt)
install.packages('classInt')
library(gpclib)
library(maptools)
gpclibPermit()
library(classInt)
a <-download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv )
a <-download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv" )
a <-download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", a.csv )
?download.file
getwd()
a <- read.csv("getdata-data-ss06hid.csv")
head(a)
library(dplyr)
vec <- ifelse(a$ACR ==4, ifelse(a$AGS == 6, TRUE, FALSE), FALSE)
head(vec)
b <- a[vec]
b <-tbl_df(a)
c <- filter(b, ACR == 3)
d <- filter(c, AGS == 6)
head(d)
vec <- ifelse(a$ACR ==4, ifelse(a$AGS == 6, TRUE, FALSE), FALSE)
a[which(vec)]
which(vec)
head(vec)
head(vec, 19)
head(vec, 300)
which(vec)
vec <- ifelse(a$ACR ==3, ifelse(a$AGS == 6, TRUE, FALSE), FALSE)
which(vec)
library(jpeg)
install.packages("jpeg")
library(jpeg)
readJPEG("test.jpg")
readJPEG("test.jpg", native=TRUE)
a <-readJPEG("test.jpg", native=TRUE)
quantile(a, c(.3, .8))
a <- read.csv('edstats.csv')
b <- read.csv('GDP.csv')
?merge
?join
head(b)
head(b$X.1)
head(b$X.1, 30)
head(b$X, 30)
head(a$X, 30)
head(a, 30)
c <- merge(a, b, by.x="X", by.y = "CountryCode")
c <- merge(a, b, by.x=X, by.y = "CountryCode")
c <- merge(a, b, by.x=a$X, by.y = "CountryCode")
c <- merge(a, b, by.y = "CountryCode")
c <- merge(a, b, by.y = b$X)
?merge
c <- merge(a,b)
head(c, 30)
head(c, 3)
head(a$Short.Name)
head(a$CountryCode)
head(b$X)
merge(a, b, by.a = "CountryCode", by.b = "X")
c <- merge(a, b, by.a = "CountryCode", by.b = "X")
head(c,2)
d <- sort(c$Gross.domestic.product.2012)
head(d$Gross.domestic.product.2012)
head(d, 15)
head(c,5)
length(d)
length(a)
length(b)
length(a$CountryCode)
length(b$X)
c <- merge(a, b, by.x = "CountryCode", by.y = "X")
d <- sort(c$Gross.domestic.product.2012)
head(d, 15)
head(d$GDP)
combined <- merge(a,b, by.x = "CountryCode", by.y = "X")
head(combined)
combined$GDP <- as.numeric(as.character(combined$Gross.domestic.product.2012))
combined$Short.Name <- as.character(combined$Short.Name)
head(combined, 13)
head(combined[order(combined$GDP, decreasing = TRUE)])
head(combined[order(combined$GDP, decreasing = TRUE),])
head(combined[order(combined$GDP, decreasing = TRUE),], 13)
?cut
f <- tapply(combined$GDP, combined$Income.Group, na.rm = TRUE, man)
f <- tapply(combined$GDP, combined$Income.Group, na.rm = TRUE, mean)
f
g <- cut(combined, breaks=5)
g <- cut(combined$GDP, breaks=5)
?table
table(g$GDP, g$Income.Group)
g <- data.frame(combined$Short.Name, combined$GDP, combined$Income.Group)
head(g)
g$quant <- cut(g$combined.GDP, breaks=5)
table(g$quant, g$combined.GDP)
table(g$quant, g$combined.Income.Group)
library(plyr)
library(dplyr)
library(ggplot2)
el_nino <- read.table("raw_el_nino.txt")
mel_nino <- matrix(el_nino[,1], ncol=13, byrow = TRUE)
## deleting wrapped values:
mel_nino[67,11:13] <- NA
colnames(mel_nino)<- mel_nino[1,]
row.names(mel_nino)<- mel_nino[,1]
mel_nino <- mel_nino[,-1]
mel_nino <- mel_nino[-1,]
class(mel_nino) <- "numeric"
del_nino <- data.frame(mel_nino)
tel_nino <- tbl_df(del_nino)
setwd("~/Desktop/puzzles-starting-2015/misc")
mel_nino <- mel_nino[,-1]
library(plyr)
library(dplyr)
library(ggplot2)
el_nino <- read.table("raw_el_nino.txt")
mel_nino <- matrix(el_nino[,1], ncol=13, byrow = TRUE)
## deleting wrapped values:
mel_nino[67,11:13] <- NA
colnames(mel_nino)<- mel_nino[1,]
row.names(mel_nino)<- mel_nino[,1]
mel_nino <- mel_nino[,-1]
mel_nino <- mel_nino[-1,]
class(mel_nino) <- "numeric"
del_nino <- data.frame(mel_nino)
tel_nino <- tbl_df(del_nino)
tel_nino
?rename
rel_nino  <- rename(tel_nino, Jan = DJF, Feb = JFM, Mar = FMA)
rel_nino
rel_nino  <- rename(tel_nino, January = DJF, February = JFM, March = FMA, April = MAM, May = AMJ, June = MJJ, July = JJA, August = JAS, September = ASO, October = SON, November = OND, December = NDJ)
rel_nino
row.names(rel_nino)
row.names(rel_nino)  <- c(1950:2015)
rel_nino
row.names(rel_nino)  <- 1950:2015
rel_nino
rownames(rel_nino)  <- 1950:2015
rel_nino
?row.names
row.names(rel_nino)
row.names(rel_nino)  <- c(1950:2015)
row.names(rel_nino)
library(lubridate)
a <- read.csv("640048.csv")
a <- tbl_df(a)
c <- mutate(a, my = as.character(DATE))
d <- mutate(c, year = as.numeric(substr(my, 1,4)), month = as.numeric(substr(my, 5,6)))
d
levels(d$STATION_NAME)
e <- filter(d, STATION_NAME == "SAINT JOHNSBURY VT US")
e
f <- filter(e, TSNW > -1)
f
h <- filter(f, year >1949)
h
j <- group_by(h, month)
?summarize
monthly_means <- summarize(j, mean(TSNW))
monthly_means
essential_snow_data  <- select(h, month, year, TSNW)
essential_snow_data
essential_snow_data  <- mutate(essential_snow_data, deviation = TSNW - monthly_means$mean(TSNW)[month])
essential_snow_data  <- mutate(essential_snow_data, deviation = TSNW - monthly_means$'mean(TSNW)'[month])
essential_snow_data
essential_snow_data$deviation
rel_nino
melt(rel_nino)
?melt
library(reshape2)
melt(rel_nino)
melt(rel_nino, id.vars = row.names(rel_nino))
melt(rel_nino, id.vars = rownames)
unlist(rel_nino)
rel_nino[1,1]
rel_nino[1,4]
rel_nino[1,]
essential_snow_data <- mutate(essential_snow_data, el_nino_strength = rel_nino[month, year - 1949])
essential_snow_data
rel_nino
essential_snow_data <- mutate(essential_snow_data, el_nino_strength = rel_nino[year - 1949, month])
essential_snow_data
essential_snow_data <- mutate(essential_snow_data, el_nino_strength = rel_nino['year' - 1949, 'month'])
essential_snow_data <- mutate(essential_snow_data, el_nino_strength = rel_nino[essential_snow_data$year - 1949, essential_snow_data$month])
essential_snow_data
essential_snow_data$el_nino_strength <- rel_nino[essential_snow_data$year - 1949, essential_snow_data$month]
essential_snow_data
?lapply
essential_snow_data$el_nino_strength <- lapply(essential_snow_data, rel_nino[essential_snow_data$year - 1949, essential_snow_data$month])
essential_snow_data$el_nino_strength <- rel_nino[essential_snow_data$year - 1949, essential_snow_data$month]
essential_snow_data
essential_snow_data$el_nino_strength <- rel_nino[[essential_snow_data$year - 1949, essential_snow_data$month]]
essential_snow_data$el_nino_strength <- rel_nino[essential_snow_data$year - 1949, 1]
essential_snow_data
essential_snow_data$el_nino_strength <- rel_nino[essential_snow_data$year - 1949, 2]
essential_snow_data
essential_snow_data$el_nino_strength <- rel_nino[year - 1949, 2]
essential_snow_data$el_nino_strength <- rel_nino[`year` - 1949, 2]
essential_snow_data$el_nino_strength <- rel_nino["year" - 1949, 2]
essential_snow_data <- mutate(essential_snow_data, el_nino_strength = rel_nino["year" - 1949, 2])
essential_snow_data <- mutate(essential_snow_data, el_nino_strength = rel_nino[year-1949, 2])
essential_snow_data <- mutate(essential_snow_data, el_nino_strength = rel_nino[2, 2])
essential_snow_data <- mutate(essential_snow_data, el_nino_strength = year)
essential_snow_data
essential_snow_data <- mutate(essential_snow_data, el_nino_strength = rel_nino[month, month])
essential_snow_data
essential_snow_data[1,5]
essential_snow_data[3,5]
essential_snow_data <- mutate(essential_snow_data, el_nino_strength = rel_nino[year - 1949, month])
essential_snow_data[3,5]
rel_nino[2000, 5]
rel_nino
rel_nino[2, 5]
melt(rel_nino)
?rbind
t(rel_nino)
melt(t(rel_nino))
melted_nino <- melt(t(rel_nino))
melted_nino
head(essential_snow_data)
essential_snow_data <- mutate(essential_snow_data, el_nino_strength = melted_nino)
essential_snow_data <- cbind(melted_nino)
essential_snow_data
a <- read.csv("640048.csv")
a <- tbl_df(a)
c <- mutate(a, my = as.character(DATE))
d <- mutate(c, year = as.numeric(substr(my, 1,4)), month = as.numeric(substr(my, 5,6)))
e <- filter(d, STATION_NAME == "SAINT JOHNSBURY VT US")
f <- filter(e, TSNW > -1)
h <- filter(f, year >1949)
j <- group_by(h, month)
monthly_means <- summarize(j, mean(TSNW))
essential_snow_data  <- select(h, month, year, TSNW)
essential_snow_data  <- mutate(essential_snow_data, deviation = TSNW - monthly_means$'mean(TSNW)'[month])
essential_snow_data <- cbind(essential_snow_data, melted_nino)
essential_snow_data
tail(essential_snow_data)
tail(melted_nino)
head(melted_nino)
dim(melted_nino)
dim(essential_snow_data)
essential_snow_data$year
essential_snow_data$month
head(essential_snow_data, 100)
melted_nino
66*12
dim(melted_nino)
dim(essential_snow_data)
h <- filter(d, year >1949)
j <- group_by(h, month)
essential_snow_data  <- select(h, month, year, TSNW)
monthly_means <- summarize(j, mean(TSNW))
essential_snow_data  <- mutate(essential_snow_data, deviation = TSNW - monthly_means$'mean(TSNW)'[month])
essential_snow_data <- cbind(essential_snow_data, melted_nino)
essential_snow_data
h <- filter(d, year >1949)
k <- filter(h, TSNW > -1)
j <- group_by(k, month)
essential_snow_data  <- select(h, month, year, TSNW)
monthly_means <- summarize(j, mean(TSNW))
essential_snow_data  <- mutate(essential_snow_data, deviation = TSNW - monthly_means$'mean(TSNW)'[month])
essential_snow_data <- cbind(essential_snow_data, melted_nino)
monthly_means
essential_snow_data
melted_nino
dim(a)
dim(b)
dim(c)
dim(d)
dim(e)
dim(h)
c <- mutate(a, my = as.character(DATE))
d <- mutate(c, year = as.numeric(substr(my, 1,4)), month = as.numeric(substr(my, 5,6)))
e <- filter(d, STATION_NAME == "SAINT JOHNSBURY VT US")
h <- filter(e, year >1949)
k <- filter(h, TSNW > -1)
j <- group_by(k, month)
essential_snow_data  <- select(h, month, year, TSNW)
monthly_means <- summarize(j, mean(TSNW))
essential_snow_data  <- mutate(essential_snow_data, deviation = TSNW - monthly_means$'mean(TSNW)'[month])
essential_snow_data <- cbind(essential_snow_data, melted_nino)
dim(melted_nino)
dim(essential_snow_data)
dim(h)
dim(e)
table(essential_snow_data$month)
table(essential_snow_data$year)
filter(essential_snow_data, year == 1974)
melted_nino
dim(melted_nino)
dim(essential_snow_data)
essential_snow_data[25,]
essential_snow_data[25*12,]
essential_snow_data[25*12:25*13,]
essential_snow_data[300:400,]
view(essential_snow_data[300:400,])
View(essential_snow_data[300:400,])
View(essential_snow_data[290:400,])
filter(d, year == 1975)
View(filter(d, year == 1975))
melted_nino
melted_nino  <- tbl_df(melted_nino)
melted_nino
snowy_months  <- as.factor(c("November", "December", "January", "February", "March", "April"))
?filter
melted_snowy_nino  <- filter(melted_nino, Var1 == snowy_months[1])
melted_snowy_nino  <- filter(melted_nino, Var1 == as.factor("November"))
melted_snowy_nino  <- filter(melted_nino, Var1 == "November")
melted_snowy_nino
melted_snowy_nino  <- filter(melted_nino, Var1 == "November" | "December")
melted_snowy_nino  <- filter(melted_nino, Var1 == "November" | Var1 == "December" | Var1 == "January" | Var1 == "February" | Var1 == "March" | Var1 == "April")
melted_snowy_nino
essential_snow_data
esd_snow_months  <- filter(essential_snow_data, month < 5 | month > 10)
esd_snow_months
final_el_snowy  <- cbind(esd_snow_months, melted_snowy_nino)
esd_snow_months
table(esd_snow_months)
table(esd_snow_months$month)
esd_snow_months
library(dplyr)
library(lubridate)
library(ggplot2)
library(grid)
a <- read.csv("640048.csv")
a <- tbl_df(a)
c <- mutate(a, my = as.character(DATE))
d <- mutate(c, year = as.numeric(substr(my, 1,4)), month = as.numeric(substr(my, 5,6)))
q <- mutate(d, station = as.character(STATION_NAME))
snow <- filter(q, TSNW > -1)
grouped_snow  <- group_by(snow, year, station)
early_snow  <- filter(grouped_snow, month > 9)
sum_early_snow  <- summarize(early_snow, sum(TSNW))
late_snow <- filter(grouped_snow, month < 6)
sum_late_snow <- summarize(late_snow, sum(TSNW))
sum_late_snow_corrected_year  <- mutate(sum_late_snow, corrected_year = year - 1)
names(sum_early_snow)[names(sum_early_snow)=="sum(TSNW)"] <- "earlysnow"
names(sum_late_snow_corrected_year)[names(sum_late_snow_corrected_year)=="sum(TSNW)"] <- "latesnow"
sum_late_snow_corrected_year <- sum_late_snow_corrected_year[,2:4]
sum_late_snow_corrected_year <- rename(sum_late_snow_corrected_year, year = corrected_year)
merged_snow  <- merge(sum_early_snow, sum_late_snow_corrected_year)
merged_snow2 <- merged_snow
levels(merged_snow2$sta_factor)[levels(merged_snow2$sta_factor)=="BOZEMAN MONTANA SU MT US"] <- "Bozeman, MT"
levels(merged_snow2$sta_factor)[levels(merged_snow2$sta_factor)=="DALE ENTERPRISE VA US"] <- "Dale Enterprise, VA"
levels(merged_snow2$sta_factor)[levels(merged_snow2$sta_factor)=="SAINT JOHNSBURY VT US"] <- "St. Johnsbury, VT"
levels(merged_snow2$sta_factor)[levels(merged_snow2$sta_factor)=="WILLOW CITY ND US"] <- "Willow City, ND"
levels(merged_snow2$sta_factor)[levels(merged_snow2$sta_factor)=="GUNNISON 3 SW CO US"] <- "Gunnison, CO"
levels(merged_snow2$sta_factor)[levels(merged_snow2$sta_factor)=="BUFFALO NIAGARA INTERNATIONAL AIRPORT NY US"] <- "Niagara Falls, NY"
levels(merged_snow2$sta_factor)[levels(merged_snow2$sta_factor)=="NOME MUNICIPAL AIRPORT AK US"] <- "Nome, AK"
levels(merged_snow2$sta_factor)[levels(merged_snow2$sta_factor)=="EDMONTON CITY CENTRE A CA"] <- "Edmonton, AB"
png("snow-puzzle-r-graphic.png", height = 1600, width=2400)
g  <- ggplot(merged_snow2, aes(earlysnow/10, latesnow/10))
g + geom_point(aes(color=sta_factor), alpha=.7, size=6) + coord_cartesian(ylim=c(0,300), xlim=c(0,200)) +
facet_wrap(~sta_factor, nrow=2) + theme_bw(base_family = "Helvetica", base_size=48) +theme(legend.position="none", plot.margin = unit(c(0.5,0.5,2,1), "cm"), axis.title.y=element_text(vjust=3), axis.title.x=element_text(vjust=-3)) +
ylab("Snow After Dec. 31 (cm)") + xlab("Snow Before Dec. 31 (cm)") + scale_x_continuous(breaks = c(50, 150)) +
stat_smooth(method=lm, se=FALSE, color="black") + geom_text(data=eq, aes( x= 100, y = 280, label = V1), parse = TRUE, inherit.aes = FALSE, size=12)
dev.off()
lm_eqn = function(df){
m = lm(latesnow ~ earlysnow, df);
eq <- substitute(~italic(r)^2~"="~r2,
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
merged_snow3 <- select(merged_snow2, sta_factor, earlysnow, latesnow)
eq <-  ddply(merged_snow3,.(sta_factor),lm_eqn)
